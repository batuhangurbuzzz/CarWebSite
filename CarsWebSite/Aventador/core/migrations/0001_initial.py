# Generated by Django 5.2.1 on 2025-06-05 09:09

import ckeditor.fields
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CarsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updatedAt', models.DateTimeField(auto_now=True, verbose_name='Güncelleme Tarihi')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Silinme Tarihi')),
                ('name', models.CharField(help_text='Aracın Marka ve Modelini Giriniz.', max_length=100, verbose_name='Araç Adı')),
                ('image', models.FileField(help_text='Aracın Resmini Ekleyiniz.', upload_to='images', verbose_name='Araç Resmi')),
                ('power', models.CharField(help_text='Aracın beygir gücünü giriniz. (Örnek: 780 CV (574 kW) 8.500 rpm)', max_length=100, verbose_name='Beygir Gücü')),
                ('maxSpeed', models.CharField(help_text='Aracın maksimum hızını giriniz. (Örnek: 355 KM/H)', max_length=100, verbose_name='Maksimum Hız')),
                ('accelerationTime', models.FloatField(default=0.1, help_text='Aracın 0-100 arası hızlanma süresini (saniye cinsinden) giriniz. Not: En düşük 0.1 en fazla 60 saniye seçebilirsiniz.', validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(60.0)], verbose_name='Hızlanma Süresi')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContactModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updatedAt', models.DateTimeField(auto_now=True, verbose_name='Güncelleme Tarihi')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Silinme Tarihi')),
                ('email', models.EmailField(max_length=254, verbose_name='E Posta Adresi')),
                ('messages', models.TextField(verbose_name='Mesaj')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeneralSettingsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updatedAt', models.DateTimeField(auto_now=True, verbose_name='Güncelleme Tarihi')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Silinme Tarihi')),
                ('name', models.CharField(max_length=100, verbose_name='Genel Ayar Adı')),
                ('bannerImage', models.FileField(blank=True, help_text='Logo varsa resmini yükleyiniz yoksa boş bırakabilirsiniz.', null=True, upload_to='images', verbose_name='Logo')),
                ('bannerText', models.CharField(blank=True, help_text='Firma adını logo yerine kullanabilirsiniz. (Örnek: KatmanKod)', max_length=50, null=True, verbose_name='Logo Yazı')),
                ('address', models.CharField(blank=True, help_text='İş yerinin mevcut adresi varsa giriniz.', max_length=250, null=True, verbose_name='Adres')),
                ('phone', models.CharField(blank=True, help_text='İş yerinin mevcut telefon numarası varsa giriniz.', max_length=20, null=True, verbose_name='Telefon Numarası')),
                ('phone2', models.CharField(blank=True, help_text='İş yerinin mevcut dahili hattı varsa giriniz.', max_length=20, null=True, verbose_name='Telefon Numarası 2')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PageModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updatedAt', models.DateTimeField(auto_now=True, verbose_name='Güncelleme Tarihi')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Silinme Tarihi')),
                ('name', models.CharField(max_length=50, verbose_name='Sayfa Adı')),
                ('title', models.CharField(blank=True, help_text='SEO için META title alanı sayfanın google aramalarında gözükecek başlık kısmı için kullanılır. Maksimum 75 karakter uzunlukta olabilir.', max_length=75, null=True, verbose_name='SEO Başlık')),
                ('description', models.CharField(blank=True, help_text='SEO için META description alanı sayfanın google aramalarında gözükecek açıklama kısmı için kullanılır. Maksimum 160 karakter uzunlukta olabilir.', max_length=160, null=True, verbose_name='SEO Açıklama')),
                ('keywords', models.CharField(blank=True, help_text='SEO için META keywords alanı, sayfanın google aramalarında ki anahtar kelimeleri için kullanılır. Maksimum 150 karakter uzunlukta olabilir.', max_length=150, null=True, verbose_name='SEO Anahtar Kelime')),
                ('slug', models.SlugField(blank=True, help_text="Sayfanın URL'sini oluşturmak için kullanılır. Benzersiz olması gerekir.", null=True, unique=True, verbose_name='URL')),
                ('content', ckeditor.fields.RichTextField(help_text='Sayfa içeriğini HTML formatında girip kaydet tuşuna basınız. Düzenleme yapma kısmında yine aynı şekilde html formatında düzenleyip kaydet yapınız.', verbose_name='Sayfa İçeriği')),
                ('isActive', models.BooleanField(default=False, help_text='Sayfanın aktif ise tik koyunuz değilse ellemeyiniz.', verbose_name='Sayfayı Yayına Al')),
            ],
            options={
                'verbose_name': 'Sayfa',
                'verbose_name_plural': 'Sayfalar',
            },
        ),
        migrations.CreateModel(
            name='SliderModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updatedAt', models.DateTimeField(auto_now=True, verbose_name='Güncelleme Tarihi')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Silinme Tarihi')),
                ('name', models.CharField(max_length=50, verbose_name='Slider Adı')),
                ('imageDesktop', models.FileField(blank=True, help_text='Masaüstü Slider Resmi', null=True, upload_to='images', verbose_name='Masaüstü Slider')),
                ('imageMobile', models.FileField(blank=True, help_text='Mobil Slider Resmi', null=True, upload_to='images', verbose_name='Mobil Slider')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SocialMediaModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updatedAt', models.DateTimeField(auto_now=True, verbose_name='Güncelleme Tarihi')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Silinme Tarihi')),
                ('name', models.CharField(help_text='Hangi sosyal medya alanını eklediğinizin adını giriniz. (Örnek: Twitter)', max_length=50, verbose_name='Sosyal Medya Adı')),
                ('link', models.SlugField(help_text='Sosyal medya adresinizin linkini giriniz.', verbose_name='Sosyal Medya Linki')),
                ('icon', models.CharField(choices=[('T', '<i class="ri-twitter-x-fill"></i>'), ('F', '<i class="ri-facebook-fill"></i>'), ('L', '<i class="ri-linkedin-fill"></i>'), ('W', '<i class="ri-whatsapp-fill"></i>')], help_text='Eklediğiniz sosyal medyaya göre bir icon seçiniz.', max_length=1, verbose_name='Sosyal Medya İconu')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlogModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updatedAt', models.DateTimeField(auto_now=True, verbose_name='Güncelleme Tarihi')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Silinme Tarihi')),
                ('name', models.CharField(max_length=100, verbose_name='Blog Adı')),
                ('content', ckeditor.fields.RichTextField(help_text='Blog içeriğini HTML formatında girip kaydet tuşuna basınız. Düzenleme yapma kısmında yine aynı şekilde html formatında düzenleyip kaydet yapınız.', verbose_name='Blog İçeriği')),
                ('title', models.CharField(blank=True, help_text='SEO için META title alanı sayfanın google aramalarında gözükecek başlık kısmı için kullanılır. Maksimum 75 karakter uzunlukta olabilir.', max_length=75, null=True, verbose_name='SEO Başlık')),
                ('description', models.CharField(blank=True, help_text='SEO için META description alanı sayfanın google aramalarında gözükecek açıklama kısmı için kullanılır. Maksimum 160 karakter uzunlukta olabilir.', max_length=160, null=True, verbose_name='SEO Açıklama')),
                ('keywords', models.CharField(blank=True, help_text='SEO için META keywords alanı, sayfanın google aramalarında ki anahtar kelimeleri için kullanılır. Maksimum 150 karakter uzunlukta olabilir.', max_length=150, null=True, verbose_name='SEO Anahtar Kelime')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Yazar')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MenuModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updatedAt', models.DateTimeField(auto_now=True, verbose_name='Güncelleme Tarihi')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Silinme Tarihi')),
                ('name', models.CharField(max_length=30, verbose_name='Menü Adı')),
                ('description', models.CharField(blank=True, help_text='Opsiyonel olarak bulunmaktadır eğer ki bir açıklama girecekseniz lütfen 45 karakteri geçmeyiniz.', max_length=45, null=True, verbose_name='Menü Açıklaması')),
                ('slug', models.SlugField(blank=True, help_text='Girilen isime göre otomatik oluşturulacaktır. Değiştirmek isterseniz değişiklik yapabilirsiniz.', unique=True, verbose_name='URL')),
                ('addFooter', models.BooleanField(default=False, help_text='Sayfanın footer kısmında menüyü göstermek kutuyu işaretleyiniz.', verbose_name="Footer'e Ekle")),
                ('isActive', models.BooleanField(default=False, help_text='Menüyü göstermek isterseniz kutuyu işaretleyiniz.', verbose_name='Aktif')),
                ('page', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='menuItem', to='core.pagemodel', verbose_name='Bağlı Olduğu Sayfa')),
            ],
            options={
                'verbose_name': 'Menü Ayarı',
                'verbose_name_plural': 'Menü Ayarları',
            },
        ),
        migrations.CreateModel(
            name='PageTypeModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updatedAt', models.DateTimeField(auto_now=True, verbose_name='Güncelleme Tarihi')),
                ('deleted_at', models.DateTimeField(blank=True, null=True, verbose_name='Silinme Tarihi')),
                ('name', models.CharField(help_text='Sayfa tipi adını giriniz. (Örnek: Blog sayfası için Blog yazabilirsiniz).', max_length=100, verbose_name='Sayfa Tipi Adı')),
                ('page', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pagetype_data', to='core.pagemodel', verbose_name='Bağlı Olduğu Sayfa')),
            ],
            options={
                'verbose_name': 'Sayfa Tipi Ayarı',
                'verbose_name_plural': 'Sayfa Tipi Ayarları',
            },
        ),
    ]
